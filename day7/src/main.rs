mod amplifiers;
mod interpreter;

use amplifiers::Amplifiers;

fn main() {
    let source = std::fs::read_to_string("test-data.txt").unwrap();

    let permutations = vec![
        vec![0, 1, 2, 3, 4],
        vec![1, 0, 2, 3, 4],
        vec![2, 0, 1, 3, 4],
        vec![0, 2, 1, 3, 4],
        vec![1, 2, 0, 3, 4],
        vec![2, 1, 0, 3, 4],
        vec![2, 1, 3, 0, 4],
        vec![1, 2, 3, 0, 4],
        vec![3, 2, 1, 0, 4],
        vec![2, 3, 1, 0, 4],
        vec![1, 3, 2, 0, 4],
        vec![3, 1, 2, 0, 4],
        vec![3, 0, 2, 1, 4],
        vec![0, 3, 2, 1, 4],
        vec![2, 3, 0, 1, 4],
        vec![3, 2, 0, 1, 4],
        vec![0, 2, 3, 1, 4],
        vec![2, 0, 3, 1, 4],
        vec![1, 0, 3, 2, 4],
        vec![0, 1, 3, 2, 4],
        vec![3, 1, 0, 2, 4],
        vec![1, 3, 0, 2, 4],
        vec![0, 3, 1, 2, 4],
        vec![3, 0, 1, 2, 4],
        vec![4, 0, 1, 2, 3],
        vec![0, 4, 1, 2, 3],
        vec![1, 4, 0, 2, 3],
        vec![4, 1, 0, 2, 3],
        vec![0, 1, 4, 2, 3],
        vec![1, 0, 4, 2, 3],
        vec![1, 0, 2, 4, 3],
        vec![0, 1, 2, 4, 3],
        vec![2, 1, 0, 4, 3],
        vec![1, 2, 0, 4, 3],
        vec![0, 2, 1, 4, 3],
        vec![2, 0, 1, 4, 3],
        vec![2, 4, 1, 0, 3],
        vec![4, 2, 1, 0, 3],
        vec![1, 2, 4, 0, 3],
        vec![2, 1, 4, 0, 3],
        vec![4, 1, 2, 0, 3],
        vec![1, 4, 2, 0, 3],
        vec![0, 4, 2, 1, 3],
        vec![4, 0, 2, 1, 3],
        vec![2, 0, 4, 1, 3],
        vec![0, 2, 4, 1, 3],
        vec![4, 2, 0, 1, 3],
        vec![2, 4, 0, 1, 3],
        vec![3, 4, 0, 1, 2],
        vec![4, 3, 0, 1, 2],
        vec![0, 3, 4, 1, 2],
        vec![3, 0, 4, 1, 2],
        vec![4, 0, 3, 1, 2],
        vec![0, 4, 3, 1, 2],
        vec![0, 4, 1, 3, 2],
        vec![4, 0, 1, 3, 2],
        vec![1, 0, 4, 3, 2],
        vec![0, 1, 4, 3, 2],
        vec![4, 1, 0, 3, 2],
        vec![1, 4, 0, 3, 2],
        vec![1, 3, 0, 4, 2],
        vec![3, 1, 0, 4, 2],
        vec![0, 1, 3, 4, 2],
        vec![1, 0, 3, 4, 2],
        vec![3, 0, 1, 4, 2],
        vec![0, 3, 1, 4, 2],
        vec![4, 3, 1, 0, 2],
        vec![3, 4, 1, 0, 2],
        vec![1, 4, 3, 0, 2],
        vec![4, 1, 3, 0, 2],
        vec![3, 1, 4, 0, 2],
        vec![1, 3, 4, 0, 2],
        vec![2, 3, 4, 0, 1],
        vec![3, 2, 4, 0, 1],
        vec![4, 2, 3, 0, 1],
        vec![2, 4, 3, 0, 1],
        vec![3, 4, 2, 0, 1],
        vec![4, 3, 2, 0, 1],
        vec![4, 3, 0, 2, 1],
        vec![3, 4, 0, 2, 1],
        vec![0, 4, 3, 2, 1],
        vec![4, 0, 3, 2, 1],
        vec![3, 0, 4, 2, 1],
        vec![0, 3, 4, 2, 1],
        vec![0, 2, 4, 3, 1],
        vec![2, 0, 4, 3, 1],
        vec![4, 0, 2, 3, 1],
        vec![0, 4, 2, 3, 1],
        vec![2, 4, 0, 3, 1],
        vec![4, 2, 0, 3, 1],
        vec![3, 2, 0, 4, 1],
        vec![2, 3, 0, 4, 1],
        vec![0, 3, 2, 4, 1],
        vec![3, 0, 2, 4, 1],
        vec![2, 0, 3, 4, 1],
        vec![0, 2, 3, 4, 1],
        vec![1, 2, 3, 4, 0],
        vec![2, 1, 3, 4, 0],
        vec![3, 1, 2, 4, 0],
        vec![1, 3, 2, 4, 0],
        vec![2, 3, 1, 4, 0],
        vec![3, 2, 1, 4, 0],
        vec![3, 2, 4, 1, 0],
        vec![2, 3, 4, 1, 0],
        vec![4, 3, 2, 1, 0],
        vec![3, 4, 2, 1, 0],
        vec![2, 4, 3, 1, 0],
        vec![4, 2, 3, 1, 0],
        vec![4, 1, 3, 2, 0],
        vec![1, 4, 3, 2, 0],
        vec![3, 4, 1, 2, 0],
        vec![4, 3, 1, 2, 0],
        vec![1, 3, 4, 2, 0],
        vec![3, 1, 4, 2, 0],
        vec![2, 1, 4, 3, 0],
        vec![1, 2, 4, 3, 0],
        vec![4, 2, 1, 3, 0],
        vec![2, 4, 1, 3, 0],
        vec![1, 4, 2, 3, 0],
        vec![4, 1, 2, 3, 0],
    ];

    let mut max = 0;
    for settings in permutations {
        let amps = Amplifiers::new(&source, settings);
        let v = amps.run();
        if v > max {
            max = v;
        }
    }
    println!("{}", max);
}
